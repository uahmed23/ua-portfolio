{"version":3,"sources":["media/sortingAlgo.PNG","media/CCSpic.png","logo.svg","components/Header.js","pages/home.js","components/ProjectBox.js","pages/projects.js","pages/coop.js","pages/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","to","sel","Home","ProjectBox","style","backgroundImage","image","backgroundColor","color","target","href","link","name","Projects","SortingAlgo","Coop","CCSpic","Contact","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qIAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,uECA3CD,EAAOC,QAAU,IAA0B,kC,6ICuB5BC,MArBf,SAAgBC,GAIZ,OAEI,gCAEI,yBAAKC,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAG,KAAI,4CAEjB,yBAAKD,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAG,YAAYD,UAAyB,IAAdD,EAAMG,IAAY,YAAc,IAAI,yCACpE,kBAAC,IAAD,CAAMD,GAAG,QAAQD,UAAyB,IAAdD,EAAMG,IAAY,YAAc,IAAI,qCAChE,kBAAC,IAAD,CAAMD,GAAG,WAAWD,UAAyB,IAAdD,EAAMG,IAAY,YAAc,IAAI,2C,aCapEC,MA1Bf,WAGI,OACI,yBAAKH,UAAU,WAEX,yBAAKA,UAAU,SACX,0CACA,+CAGJ,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAMC,GAAG,aACL,yCAEJ,kBAAC,IAAD,CAAMA,GAAG,SACL,+CAEJ,kBAAC,IAAD,CAAMA,GAAG,YACL,2CCDLG,MAnBf,SAAoBL,GAEhB,OACI,yBACIM,MAAO,CACHC,gBAAgB,OAAD,OAASP,EAAMQ,MAAf,KACfC,gBAAgB,GAAD,OAAKT,EAAMU,QAE9BT,UAAU,cAEV,uBAAGA,UAAU,SAASU,OAAO,SAASC,KAAMZ,EAAMa,MAE7Cb,EAAMc,Q,yBCARC,MATf,WAEI,OACI,yBAAKd,UAAU,oBACX,kBAAC,EAAD,CAAYa,KAAK,+BAA+BN,MAAOQ,IAAaH,KAAK,iE,iBCMtEI,MATf,WAEI,OACI,yBAAKhB,UAAU,oBACX,kBAAC,EAAD,CAAYa,KAAK,oBAAoBN,MAAOU,IAAQL,KAAK,kDAAkDH,MAAM,cCG9GS,MAVf,WAEI,OACI,yBAAKlB,UAAU,oBAAf,sBC6BOmB,MAzBf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,CAAQnB,IAAK,IACb,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOmB,KAAK,SACV,kBAAC,EAAD,CAAQnB,IAAK,IACb,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOmB,KAAK,YACV,kBAAC,EAAD,CAAQnB,IAAK,IACb,kBAAC,EAAD,UChBUoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d3238f8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sortingAlgo.4341d51b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/CCSpic.a8aab414.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nfunction Header(props) {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <header>\r\n\r\n            <div className=\"logo\">\r\n                <Link to=\"/\"><h2>UMER AHMED</h2></Link>\r\n            </div>\r\n            <div className=\"tabs\">\r\n                <Link to=\"/projects\" className={props.sel === 1 ? \"underline\" : \"\"}><h2 >projects</h2></Link>\r\n                <Link to=\"/coop\" className={props.sel === 2 ? \"underline\" : \"\"}><h2>coop</h2></Link>\r\n                <Link to=\"/contact\" className={props.sel === 3 ? \"underline\" : \"\"}><h2>contact</h2></Link>\r\n            </div>\r\n\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport \"./home.css\"\r\nfunction Home() {\r\n\r\n\r\n    return (\r\n        <div className=\"homebox\">\r\n\r\n            <div className=\"intro\">\r\n                <h1>UMER AHMED</h1>\r\n                <h3>-CS PORTFOLIO-</h3>\r\n            </div>\r\n\r\n            <div className=\"links\">\r\n                <Link to=\"/projects\">\r\n                    <h1>Projects</h1>\r\n                </Link>\r\n                <Link to=\"/coop\">\r\n                    <h1>Coop Workterms</h1>\r\n                </Link>\r\n                <Link to=\"/contact\">\r\n                    <h1>Contact</h1>\r\n                </Link>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from \"react\"\r\n\r\nfunction ProjectBox(props) {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                backgroundImage: `url(${props.image})`,\r\n                backgroundColor: `${props.color}`\r\n            }}\r\n            className=\"projectBox\"\r\n        >\r\n            <a className=\"button\" target=\"_blank\" href={props.link}>\r\n                {/* < button > */}\r\n                {props.name}\r\n                {/* </button > */}\r\n            </a>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProjectBox\r\n\r\n/* background-image: url(../media/sortingAlgo.PNG); */\r\n","import React from \"react\"\r\nimport ProjectBox from \"../components/ProjectBox\"\r\nimport \"./sections.css\"\r\nimport SortingAlgo from \"../media/sortingAlgo.PNG\"\r\n\r\nfunction Projects() {\r\n\r\n    return (\r\n        <div className='sectionContainer'>\r\n            <ProjectBox name=\"Sorting Algorithm Visualizer\" image={SortingAlgo} link=\"https://uahmed23.github.io/sorting-algorithm-visualizer/#/\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import React from \"react\"\r\nimport \"./sections.css\"\r\nimport ProjectBox from \"../components/ProjectBox\"\r\nimport CCSpic from \"../media/CCSpic.png\"\r\n\r\n\r\nfunction Coop() {\r\n\r\n    return (\r\n        <div className='sectionContainer'>\r\n            <ProjectBox name=\"CCS IT CONSULTANT\" image={CCSpic} link=\"https://uahmed23.github.io/ccs-workterm-report/\" color=\"#1E90FF\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coop","import React from \"react\"\r\nimport \"./sections.css\"\r\n\r\nfunction Contact() {\r\n\r\n    return (\r\n        <div className='sectionContainer'>\r\n            umer@uoguelph.ca.\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./components/Header\"\nimport { Route, Switch } from \"react-router-dom\"\nimport Home from \"./pages/home\"\nimport Projects from \"./pages/projects\"\nimport Coop from \"./pages/coop\"\nimport Contact from \"./pages/contact\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/projects\">\n          <Header sel={1} />\n          <Projects />\n        </Route>\n        <Route path=\"/coop\">\n          <Header sel={2} />\n          <Coop />\n        </Route>\n\n        <Route path=\"/contact\">\n          <Header sel={3} />\n          <Contact />\n        </Route>\n      </Switch>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}